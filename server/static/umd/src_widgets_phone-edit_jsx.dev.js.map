{"version":3,"file":"src_widgets_phone-edit_jsx.dev.js","mappings":"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","sources":["webpack://tinode-webapp/./src/widgets/phone-edit.jsx"],"sourcesContent":["// Editor for a phone number.\n\nimport React from 'react';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { AsYouType, getExampleNumber, parsePhoneNumber } from 'libphonenumber-js/mobile';\nimport examples from 'libphonenumber-js/mobile/examples'\n\nimport * as dcodes from '../dcodes.json';\nimport { flagEmoji } from '../lib/strformat';\n\nconst messages = defineMessages({\n  mobile_number_required: {\n    id: 'mobile_number_required',\n    defaultMessage: 'Mobile phone number required',\n    description: 'Error message'\n  }\n});\n\nclass PhoneEdit extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.codeMap = {};\n    dcodes.default.forEach(dc => { this.codeMap[dc.code] = dc.dial; });\n\n    const code = props.countryCode || 'US';\n    const dial = this.codeMap[code];\n\n    this.state = {\n      countryCode: code,\n      dialCode: dial,\n      localNumber: '',\n      placeholderNumber: this.placeholderNumber(code, dial)\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFinished = this.handleFinished.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.showCountrySelector = this.showCountrySelector.bind(this);\n  }\n\n  handleChange(e) {\n    const prefix = `+${this.state.dialCode}`;\n    let formatted = new AsYouType().input(`${prefix}${this.filterNumber(e.target.value)}`);\n    formatted = formatted.substring(prefix.length).trim();\n    this.setState({localNumber: formatted});\n  }\n\n  handleFinished(e) {\n    e.preventDefault();\n    const raw = `${this.state.dialCode}${this.state.localNumber.trim()}`.replace(/[^\\d]/g, '');\n    let number = null;\n    try {\n      number = parsePhoneNumber(`+${raw}`);\n    } catch (err) {}\n\n    if (!number || !number.isValid()) {\n      this.inputField.setCustomValidity(this.props.intl.formatMessage(messages.mobile_number_required));\n      return;\n    }\n\n    this.inputField.setCustomValidity('');\n    this.props.onSubmit(number.format('E.164'));\n  }\n\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      this.handleFinished(e);\n    }\n  }\n\n  showCountrySelector() {\n    this.props.onShowCountrySelector(this.state.countryCode, this.state.dialCode,\n      (code, dial) => {\n          this.setState({\n            countryCode: code,\n            dialCode: dial,\n            placeholderNumber: this.placeholderNumber(code, dial)\n        })\n      });\n  }\n\n  // Filter out characters not permitted in a phone number.\n  filterNumber(number) {\n    if (!number) {\n      return number;\n    }\n    // Leave numbers, space, (, ), -, and .\n    // The + is not allowed: it's handled by the country code portion.\n    return number.replace(/[^-\\s().\\d]/g, '');\n  }\n\n  placeholderNumber(code, dial) {\n    const sample = getExampleNumber(code, examples);\n    return sample ? sample.formatInternational().substring(dial.length + 1).trim() : '123 0123';\n  }\n\n  render() {\n    return (\n      <>\n        <span className=\"dial-code\" onClick={this.showCountrySelector}>\n          <span className=\"country-flag\">{flagEmoji(this.state.countryCode)}&nbsp;</span>\n          +{this.state.dialCode}&nbsp;</span>\n        <input type=\"tel\" ref={ref => {this.inputField = ref}} placeholder={this.state.placeholderNumber}\n            value={this.state.localNumber} onChange={this.handleChange}\n            maxLength={17} onKeyDown={this.handleKeyDown} onBlur={this.handleFinished}\n            required autoFocus={this.props.autoFocus} />\n      </>\n    );\n  }\n}\n\nexport default injectIntl(PhoneEdit);\n"],"names":["React","defineMessages","injectIntl","AsYouType","getExampleNumber","parsePhoneNumber","examples","dcodes","flagEmoji","messages","mobile_number_required","id","defaultMessage","description","PhoneEdit","PureComponent","constructor","props","codeMap","default","forEach","dc","code","dial","countryCode","state","dialCode","localNumber","placeholderNumber","handleChange","bind","handleFinished","handleKeyDown","showCountrySelector","e","prefix","formatted","input","filterNumber","target","value","substring","length","trim","setState","preventDefault","raw","replace","number","err","isValid","inputField","setCustomValidity","intl","formatMessage","onSubmit","format","key","onShowCountrySelector","sample","formatInternational","render","createElement","Fragment","className","onClick","type","ref","placeholder","onChange","maxLength","onKeyDown","onBlur","required","autoFocus"],"sourceRoot":""}